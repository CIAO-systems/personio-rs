/*
 * Personnel Data
 *
 * API for reading and writing personnel data including data about attendances, absences, documents, etc
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AttendancePeriodsResponseAllOfData {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "type", deserialize_with = "Option::deserialize")]
    pub r#type: Option<serde_json::Value>,
    #[serde(rename = "attributes")]
    pub attributes: Box<models::Attendance>,
    #[serde(flatten)]
    pub additional_properties: std::collections::HashMap<String, serde_json::Value>,
}

impl AttendancePeriodsResponseAllOfData {
    pub fn new(id: i32, r#type: Option<serde_json::Value>, attributes: models::Attendance) -> AttendancePeriodsResponseAllOfData {
        AttendancePeriodsResponseAllOfData {
            id,
            r#type,
            attributes: Box::new(attributes),
            additional_properties: std::collections::HashMap::new(),
        }
    }
}

