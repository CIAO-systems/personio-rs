/*
 * Personnel Data
 *
 * API for reading and writing personnel data including data about attendances, absences, documents, etc
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TypeEnum {
    #[serde(rename = "standard")]
    Standard,
    #[serde(rename = "date")]
    Date,
    #[serde(rename = "integer")]
    Integer,
    #[serde(rename = "decimal")]
    Decimal,
    #[serde(rename = "list")]
    List,
    #[serde(rename = "link")]
    Link,
    #[serde(rename = "tags")]
    Tags,
    #[serde(rename = "multiline")]
    Multiline,

}

impl std::fmt::Display for TypeEnum {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Standard => write!(f, "standard"),
            Self::Date => write!(f, "date"),
            Self::Integer => write!(f, "integer"),
            Self::Decimal => write!(f, "decimal"),
            Self::List => write!(f, "list"),
            Self::Link => write!(f, "link"),
            Self::Tags => write!(f, "tags"),
            Self::Multiline => write!(f, "multiline"),
        }
    }
}

impl Default for TypeEnum {
    fn default() -> TypeEnum {
        Self::Standard
    }
}

