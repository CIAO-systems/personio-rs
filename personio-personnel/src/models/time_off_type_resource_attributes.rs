/*
 * Personnel Data
 *
 * API for reading and writing personnel data including data about attendances, absences, documents, etc
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TimeOffTypeResourceAttributes {
    /// identifier
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "category", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub category: Option<Option<Category>>,
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<Unit>,
    #[serde(rename = "approval_required", skip_serializing_if = "Option::is_none")]
    pub approval_required: Option<bool>,
}

impl TimeOffTypeResourceAttributes {
    pub fn new() -> TimeOffTypeResourceAttributes {
        TimeOffTypeResourceAttributes {
            id: None,
            name: None,
            category: None,
            unit: None,
            approval_required: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Category {
    #[serde(rename = "family_care")]
    FamilyCare,
    #[serde(rename = "maternity_parental_leave")]
    MaternityParentalLeave,
    #[serde(rename = "child_care")]
    ChildCare,
    #[serde(rename = "short_time_allowance")]
    ShortTimeAllowance,
    #[serde(rename = "quarantine")]
    Quarantine,
    #[serde(rename = "irrevocable_exemption")]
    IrrevocableExemption,
    #[serde(rename = "sick_leave")]
    SickLeave,
    #[serde(rename = "strike_and_lockout")]
    StrikeAndLockout,
    #[serde(rename = "public_duty")]
    PublicDuty,
    #[serde(rename = "unpaid_suspension")]
    UnpaidSuspension,
    #[serde(rename = "paid_vacation")]
    PaidVacation,
    #[serde(rename = "unpaid_vacation")]
    UnpaidVacation,
    #[serde(rename = "unexcused_absence")]
    UnexcusedAbsence,
    #[serde(rename = "offsite_work")]
    OffsiteWork,
    #[serde(rename = "other")]
    Other,
    #[serde(rename = "undefined")]
    Undefined,
}

impl Default for Category {
    fn default() -> Category {
        Self::FamilyCare
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Unit {
    #[serde(rename = "day")]
    Day,
    #[serde(rename = "hour")]
    Hour,
}

impl Default for Unit {
    fn default() -> Unit {
        Self::Day
    }
}

