/*
 * Personnel Data
 *
 * API for reading and writing personnel data including data about attendances, absences, documents, etc
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
#[serde(untagged)]
pub enum PublicReportItemsDataAttributes {
    PublicReportItemsAttributes(Box<models::PublicReportItemsAttributes>),
    PublicTimeframeReportItemsAttributes(Box<models::PublicTimeframeReportItemsAttributes>),
    PublicHistoricalReportItemsAttributes(Box<models::PublicHistoricalReportItemsAttributes>),
}

impl Default for PublicReportItemsDataAttributes {
    fn default() -> Self {
        Self::PublicReportItemsAttributes(Default::default())
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "point_in_time")]
    PointInTime,
    #[serde(rename = "timeframe")]
    Timeframe,
    #[serde(rename = "historical_data")]
    HistoricalData,
}

impl Default for Type {
    fn default() -> Type {
        Self::PointInTime
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "up_to_date")]
    UpToDate,
    #[serde(rename = "updating")]
    Updating,
    #[serde(rename = "update_failed")]
    UpdateFailed,
}

impl Default for Status {
    fn default() -> Status {
        Self::UpToDate
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PeriodType {
    #[serde(rename = "fixed")]
    Fixed,
    #[serde(rename = "today")]
    Today,
    #[serde(rename = "yesterday")]
    Yesterday,
    #[serde(rename = "this_week")]
    ThisWeek,
    #[serde(rename = "last_week")]
    LastWeek,
    #[serde(rename = "this_month")]
    ThisMonth,
    #[serde(rename = "last_month")]
    LastMonth,
    #[serde(rename = "last_thirty_days")]
    LastThirtyDays,
    #[serde(rename = "next_month")]
    NextMonth,
    #[serde(rename = "this_quarter")]
    ThisQuarter,
    #[serde(rename = "last_quarter")]
    LastQuarter,
    #[serde(rename = "this_year")]
    ThisYear,
    #[serde(rename = "year_to_date")]
    YearToDate,
    #[serde(rename = "last_year")]
    LastYear,
    #[serde(rename = "next_year")]
    NextYear,
}

impl Default for PeriodType {
    fn default() -> PeriodType {
        Self::Fixed
    }
}

